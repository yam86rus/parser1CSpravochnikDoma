package main;

public class Parser {

            /* Метод обрабатывает входящую строку. В зависимости от адреса можно выделить 9 видов "маски":

            --------------------------------------------------------
            1) Есть ОДНА ПАРА КАВЫЧЕК и есть ОДНА ЗАПЯТАЯ.          ПРИМЕР: <Зеленая ул (Прииртышский п), дом 29>
            2) Есть ОДНА ПАРА КАВЫЧЕК и нет ЗАПЯТОЙ.                ПРИМЕР: <Виртуальная ул. (Пушнятская д)>
            3) Есть ОДНА ПАРА КАВЫЧЕК и есть НЕСКОЛЬКО ЗАПЯТЫХ      ПРИМЕР: <Жасминовая ул. (Жасмин снт, Жасмин), уч. № 42>
                                                                    ПРИМЕР: <Советская ул (Ушакова д), уч. № 72:17:1905, корпус 003:205>
            --------------------------------------------------------
            3) Есть НЕСКОЛЬКО ПАР КАВЫЧЕК и ОДНА ЗАПЯТАЯ            ПРИМЕР: <Парковый (мкр Молодежный) проезд (Ушакова д), дом 14/1>
            4) Есть НЕСКОЛЬКО ПАР КАВЫЧЕК и НЕТ ЗАПЯТОЙ             ПРИМЕР: <Рябиновая ул (Солнечное (Андрееское МО) снт)>
            5) Есть НЕСКОЛЬКО ПАР КАВЫЧЕК и НЕСКОЛЬКО ЗАПЯТЫХ       ПРИМЕР: <Лесная (мкр Молодежный) ул (Ушакова д), уч. № 31, корпус кад.№1878>
            --------------------------------------------------------
            6) Нет КАВЫЧЕК и есть ОДНА запятая.                     ПРИМЕР: <Карташи д, дом 4а>
                                                                    ПРИМЕР: <Новотарманское МО тер., уч. № 112>
                                                                    ПРИМЕР: <ур-ще м/у Перевалово и Зубарево тер, уч. № 1670>

            7) Нет КАВЫЧЕК и есть НЕСКОЛЬКО запятых.                ПРИМЕР: <Черкашина д, уч. № 72:16:2109, корпус 001:17>
                                                                    ПРИМЕР: <Перевалово с, уч. № 1,7км, корпус уч.№2>
                                                                    ПРИМЕР: <Есаулова д, дом 196, корпус уч.>

            8) Нет КАВЫЧЕК и нет ЗАПЯТОЙ.                           ПРИМЕР: <Переваловское МО тер>
                                                                    ПРИМЕР: <Ушакова д>
                                                                    ПРИМЕР: <р-н 320км трассы Екатеринбург-Тюмень>
            --------------------------------------------------------
            Bonus:
            перечисления (ул. = ул)
            перечисления (д. = д)
            перечисления (тер. = тер)
            --------------------------------------------------------
            */

    public static String parse(String str) {

        // учет запятых в строке
        // где <0> - нет запятых
        // <1> - одна запятая
        // <2> - более одной запятой
        int countComa = 0;
        if (str.indexOf(',') == -1) {
            countComa = 0;
        } else {
            countComa = (str.indexOf(',') <= str.lastIndexOf(',')) ? 1 : 2;

        }

        // учет круглых скобок в строке
        // где <0> - нет скобок
        // <1> - одна скобка
        // <2> - более одной скобки
        int countBracket = 0;
        if (str.indexOf('(') == -1) {
            countBracket = 0;
        } else {
            countBracket = (str.indexOf('(') <= str.lastIndexOf('(')) ? 1 : 2;
        }

        String result = null;

        // 1) Есть ОДНА ПАРА КАВЫЧЕК и есть ОДНА ЗАПЯТАЯ.
        //    ПРИМЕР: <Лесная ул (Прииртышский п), уч. № 1 В>


        if (countComa == 1 && countBracket == 1) {
            int n1 = str.indexOf("("); // номер символа "("
            int n2 = str.indexOf(")"); // номер символа "("
            String s1 = str.substring(n1 + 1, n2).trim(); // хранит значения в скобках <Прииртышский п>
            int n3 = s1.lastIndexOf(" "); // номер последнего пробела в <Прииртышский п>
            String s2 = s1.substring(0, n3); // хранит <Прииртышский> из <Прииртышский п>
            String s3 = s1.substring(n3 + 1); // хранит <п> из <Прииртышский п>

            String s4 = str.substring(0, n1).trim(); // хранит <Лесная ул> из <Лесная ул (Прииртышский п), уч. № 1 В>
            int n4 = s4.lastIndexOf(" "); // номер последнего пробела в <Лесная ул>
            String s5 = s4.substring(0, n4); // хранит <Лесная> из <Лесная ул>

            String s6 = s4.substring(n4 + 1); // хранит <ул> из <Лесная ул>
            if (s6.charAt(s6.length() - 1) == '.') { // проверяем есть ли в конце точка, и если есть убираем
                s6 = s4.substring(n4 + 1, s4.length() - 1);
            }

            result = s6 + " " + s5 + " " + s2 + " " + s3;


        } else {
            result = "Данную маску еще не обработали. " + str;
        }
        return result;
    }
}
